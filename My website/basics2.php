<?php
session_start();

if(!(isset($_SESSION['username'])))
{
	header ("location: index.html");
}
?>

<!DOCTYPE html>
<html>

<head>
<meta charset="utf-8" />
<link rel="stylesheet" href="Εργασία 1/styles/style.css"/>
<title>Το θέμα μου </title>
</head>
<body>
<div class="container">

<header> 
<a href="index2.php"> <img src="Εργασία 1/media/java1.png" align="center" style="color:white"></a> <h1>JAVA </h1>

<!--<div class="logo">
<h1> <a href="index.html" style="color:white"> JAVA</a> </h1>-->

 </header>

<nav> 
<ul>
	<li> <a href="index2.php"> ΑΡΧΙΚΗ </a> </li>
	<li class="selected"><a href="basics2.php"> ΤΟ ΘΕΜΑ ΜΟΥ </a> </li>
	<li> <a href="more2.php"> ΠΕΡΙΣΣΟΤΕΡΑ </a> </li>
	<li> <a href="quiz2.php">  QUIZ</a> </li>
	<li> <a href="logout.php"> ΕΞΟΔΟΣ</a> </li>
	</ul>
</nav>


<main> 
<h2> ΕΙΣΑΓΩΓΗ ΣΤΗΝ ΚΛΗΡΟΝΟΜΙΚΟΤΗΤΑ </h2>
<p> 
Ο αντικειμενοστεφής προγραμματισμός αποτελεί μια δημοφιλή και δυνατή προγραμματιστική φιλοσοφία. Μια απο τις κύριες τεχνικές του αντικειμενοστρεφούς προγραμματισμού ονομάζεται 
κληρονομικότητα(inheritance).Η κληρονομηκότητα είναι μια διαδικασία με την οποία μια νέα κλάση - που ονομάζεται παράγωγη κλάση(direved class) - δημιουργείται απο μια άλλη κλάση που ονομάζεται βασική κλάση(based class).
Μια παράγωγη κλάση έχει αυτομάτως όλες τις μεταβλητές στιγμιοτύπου και όλες τις μεθόδους που έχει και η βασική κλάση, ενώ μπορεί να έχει επιπρόσθετες μεθόδους ή/και επιπρόσθετες μεταβλητές στιγμιοτύπου.
Μια παράγωγη κλάση ονομάζεται επίσης υποκλάση(subclass) , και στην περίπτωση αυτή η βασική κλάση συνήθως ονομάζεται υπερκλάση(superclass).<br>
</p>
<br><br><br>
<h5> Παράδειγμα!!</h5>
<p> 
Υποθέτουμε οτι σχεδιάζουμε ένα πρόγραμμα αρχειοθέτησης φακέλων για μισθωτούς και ωρομίσθιους υπαλλήλους.Υπάρχει μια φυσική ιεραρχία στην ομαδοποίηση αυτών των κλάσεων.
Αυτές είναι όλες κλάσεις ανθρώπων που μοιράζονται την ιδιότητα του να είναι υπάλληλοι. <br>
Οι υπάλληλοι που πληρώνονται με την ώρα είναι ένα υποσύνολο υπαλλήλων. Ένα άλλο υποσύνολο αποτελείται από μισθωτούς υπαλλήλους που παίρνουν συγκεκριμένο μισθό τον μήνα. Επίσης όλοι οι υπάλληλοι
έχουν ένα όνομα και μια ημερομηνία πρόσληψης και οι μέθοδοι με τις οποίες θέτουμε και αλλάζουμε ονόματα και ημερομηνίες πρόσληψης θα είναι οι ίδιες τόσο για τους μισθωτούς όσο και για τους ωρομίσθιους υπαλλήλους.
Χρησιμοποιόντας τώρα τις κλάσεις της JAVA μπορούμε να ορίσουμε μια κλάση με όνομα Employee που συμπεριλαμβάνει όλους τους υπαλλήλους είτε αυτοί είναι μισθωτοί είται ωρομίσθιοι, και έπειτα να χρησιμοποιήσουμε την κλάση
αυτή για να ορίσουμε τις κλάσεις των ωρομίσθιων και των μισθωτών υπαλλήλων. Έτσι φτιάχνουμε μια κλάση με όνομα HourlyEmployee για τους ωρομίσθιους υπαλλήλους.
Με χρήση της κληρονομικότητας λοιπόν απο την κλάση Employee(βασική κλάση) μπορούμε να ορίσουμε παράγωγες κλάσεις της για διαφορετικά είδη υπαλλήλων HourlyEmployee(παράγωγη κλάση) <br> <br> 
</p>

<p><img src="Εργασία 1/media/p3.png">
<img src="Εργασία 1/media/p4.png"></p>


</main>

<section><h2> Χρησιμα!! </h2>
<ul>
	<li align="left"><p>Κάθε υποκλάση κληρονομεί (inherits) τις μεθόδους και τις ιδιότητες που έχουν οριστεί ως public στη βασική κλάση.</p></li>
	<li align="left"><p>Η υποκλάση δεν έχει πρόσβαση στις μεθόδους και τις ιδιότητες που έχουν οριστεί ως private στη βασική κλάση.</p></li>
	<li align="left"><p>Η υποκλάση μπορεί να ορίσει νέες ιδιότητες και μεθόδους και να υπερσκελίσει (override) ιδιότητες και μεθόδους που έχει ορίσει η βασική κλάση.Έτσι, οι περισσότερες κλάσεις αντικαθιστούν τη μέθοδο toString() που επιστρέφει μια συμβολοσειρά που αντιστοιχεί στο περιεχόμενο ενός αντικειμένου και παρέχεται από την Java για όλα τα αντικείμενα με μια πιο εξειδικευμένη μέθοδο.</p></li>
	<li align="left"><p>Μέσα από την κλάση μπορούμε να αναφερθούμε στη βασική κλάση με τον προσδιορισμό super.</p></li>
</ul></section>
<aside></aside>
 
 <!--Η σύνταξη για τον ορισμό αυτό είναι της μορφής:<br>
<img src="images/p1.png">-->


<footer style="color:#ffffff"> 
 Σχεδίαση Ιστοσελίδας: Κυριάκος Αλεβίζος <br>
 Επικοινωνία:<a href="mailto:kiriakosalev13@gmail.com" style="color:#ffffff"> Email me here</a>
</footer>

</div>
</body>


</html>